<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="engine.TestQuizEngine" tests="7" skipped="0" failures="0" errors="0" timestamp="2020-08-24T20:45:43" hostname="DESKTOP-R1TI04S" time="2.022">
  <properties/>
  <testcase name="addUser()" classname="engine.TestQuizEngine" time="1.052"/>
  <testcase name="getAllQuizzesPaging()" classname="engine.TestQuizEngine" time="0.275"/>
  <testcase name="solveQuiz()" classname="engine.TestQuizEngine" time="0.187"/>
  <testcase name="CompletedQuizPagenation()" classname="engine.TestQuizEngine" time="0.155"/>
  <testcase name="getQuizById()" classname="engine.TestQuizEngine" time="0.088"/>
  <testcase name="sendQuiz()" classname="engine.TestQuizEngine" time="0.111"/>
  <testcase name="deleteQuiz()" classname="engine.TestQuizEngine" time="0.12"/>
  <system-out><![CDATA[23:45:16.959 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
23:45:17.004 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
23:45:17.092 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [engine.TestQuizEngine] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
23:45:17.144 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [engine.TestQuizEngine], using SpringBootContextLoader
23:45:17.156 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [engine.TestQuizEngine]: class path resource [engine/TestQuizEngine-context.xml] does not exist
23:45:17.158 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [engine.TestQuizEngine]: class path resource [engine/TestQuizEngineContext.groovy] does not exist
23:45:17.159 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [engine.TestQuizEngine]: no resource found for suffixes {-context.xml, Context.groovy}.
23:45:17.162 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [engine.TestQuizEngine]: TestQuizEngine does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
23:45:17.353 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [engine.TestQuizEngine]
23:45:17.598 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\Sergey\IdeaProjects\MyOwnProjects\Quiz\QuizEngine\build\classes\java\main\engine\QuizEngine.class]
23:45:17.607 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration engine.QuizEngine for test class engine.TestQuizEngine
23:45:17.944 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [engine.TestQuizEngine]: using defaults.
23:45:17.947 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
23:45:18.014 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@2750d0ab, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@637db629, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6f1a6e05, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@441e739b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@656a263b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6ba80841, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@57fe3977, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@60cb0ab8, org.springframework.test.context.event.EventPublishingTestExecutionListener@5424a364, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@7f6553a1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5976e8bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@61d0b7e7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@101e073a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@45b3b6c3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2b6eadfe]
23:45:18.028 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@296013f0 testClass = TestQuizEngine, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@242e3db testClass = TestQuizEngine, locations = '{}', classes = '{class engine.QuizEngine}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:/application-test.properties}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@511b4522, [ImportsContextCustomizer@25ce1958 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@16c797f4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6f569157, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6709be6c], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].
23:45:18.110 [Test worker] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.2.1.RELEASE)

2020-08-24 23:45:19.262  INFO 11908 --- [    Test worker] engine.TestQuizEngine                    : Starting TestQuizEngine on DESKTOP-R1TI04S with PID 11908 (started by Sergey in C:\Users\Sergey\IdeaProjects\MyOwnProjects\Quiz\QuizEngine)
2020-08-24 23:45:19.265  INFO 11908 --- [    Test worker] engine.TestQuizEngine                    : No active profile set, falling back to default profiles: default
2020-08-24 23:45:23.575  INFO 11908 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data repositories in DEFAULT mode.
2020-08-24 23:45:23.915  INFO 11908 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 305ms. Found 2 repository interfaces.
2020-08-24 23:45:25.968  INFO 11908 --- [    Test worker] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-24 23:45:27.238  INFO 11908 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-08-24 23:45:27.604  INFO 11908 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.8.Final}
2020-08-24 23:45:28.389  INFO 11908 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-08-24 23:45:28.983  INFO 11908 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2020-08-24 23:45:30.180  INFO 11908 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2020-08-24 23:45:30.351  INFO 11908 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2020-08-24 23:45:34.324  INFO 11908 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-08-24 23:45:34.390  INFO 11908 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-08-24 23:45:34.858  WARN 11908 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-08-24 23:45:40.717  INFO 11908 --- [    Test worker] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-08-24 23:45:42.928  INFO 11908 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4d5c6eef, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e1b028a, org.springframework.security.web.header.HeaderWriterFilter@3e668517, org.springframework.security.web.authentication.logout.LogoutFilter@6d805c4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@35a50fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@54748d31, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@40ee97d2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34dcd04, org.springframework.security.web.session.SessionManagementFilter@5338d62a, org.springframework.security.web.access.ExceptionTranslationFilter@2c0803c0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3a55f5b5]
2020-08-24 23:45:43.023  INFO 11908 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:file:../quizdb-test'
2020-08-24 23:45:43.304  INFO 11908 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2020-08-24 23:45:43.305  INFO 11908 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2020-08-24 23:45:43.339  INFO 11908 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 14 endpoint(s) beneath base path '/actuator'
2020-08-24 23:45:43.449  INFO 11908 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 143 ms
2020-08-24 23:45:43.559  INFO 11908 --- [    Test worker] engine.TestQuizEngine                    : Started TestQuizEngine in 25.424 seconds (JVM running for 29.064)
Hibernate: select user0_.id as id1_4_, user0_.active as active2_4_, user0_.email as email3_4_, user0_.password as password4_4_, user0_.roles as roles5_4_ from user user0_
Hibernate: call next value for hibernate_sequence
Hibernate: insert into user (active, email, password, roles, id) values (?, ?, ?, ?, ?)
Hibernate: select quiz0_.id as id1_3_, quiz0_.creator as creator2_3_, quiz0_.text as text3_3_, quiz0_.title as title4_3_ from quiz quiz0_ order by quiz0_.id asc limit ?
Hibernate: select options0_.options_id as options_3_2_0_, options0_.option_id as option_i1_2_0_, options0_.option_id as option_i1_2_1_, options0_.option as option2_2_1_ from option options0_ where options0_.options_id=?
Hibernate: select answers0_.answers_id as answers_3_0_0_, answers0_.answer_id as answer_i1_0_0_, answers0_.answer_id as answer_i1_0_1_, answers0_.answer as answer2_0_1_ from answer answers0_ where answers0_.answers_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/quizzes
       Parameters = {page=[0]}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@9e8d6351: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@9e8d6351: Principal: org.springframework.security.core.userdetails.User@17d5e403: Username: test@gmail.com; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = engine.controller.TaskController
           Method = engine.controller.TaskController#getAllQuizzesPaging(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"totalPages":1,"totalElements":1,"last":true,"first":true,"sort":{"sorted":true,"unsorted":false,"empty":false},"number":0,"numberOfElements":1,"size":10,"empty":false,"pageable":{"sort":{"sorted":true,"unsorted":false,"empty":false},"offset":0,"pageNumber":0,"pageSize":10,"unpaged":false,"paged":true},"content":[{"id":1,"title":"Tea drinks","text":"Select only tea drinks.","creator":"test@gmail.com","options":[{"optionId":1,"option":"black tea"},{"optionId":2,"option":"green tea"},{"optionId":3,"option":"Cappuccino"},{"optionId":4,"option":"Sprite"}],"answers":[{"answerId":1,"answer":0},{"answerId":2,"answer":1}],"correct":true}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select quiz0_.id as id1_3_0_, quiz0_.creator as creator2_3_0_, quiz0_.text as text3_3_0_, quiz0_.title as title4_3_0_ from quiz quiz0_ where quiz0_.id=?
Hibernate: select answers0_.answers_id as answers_3_0_0_, answers0_.answer_id as answer_i1_0_0_, answers0_.answer_id as answer_i1_0_1_, answers0_.answer as answer2_0_1_ from answer answers0_ where answers0_.answers_id=?
Hibernate: select user0_.id as id1_4_, user0_.active as active2_4_, user0_.email as email3_4_, user0_.password as password4_4_, user0_.roles as roles5_4_ from user user0_
Hibernate: select completed0_.completed_id as complete4_1_0_, completed0_.id as id1_1_0_, completed0_.id as id1_1_1_, completed0_.completed_at as complete2_1_1_, completed0_.quiz_id as quiz_id3_1_1_ from completed_quiz completed0_ where completed0_.completed_id=?
Hibernate: call next value for hibernate_sequence
Hibernate: insert into completed_quiz (completed_at, quiz_id, id) values (?, ?, ?)
Hibernate: update completed_quiz set completed_id=? where id=?
1

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /api/quizzes/1/solve
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = {"answer":[0,1]}
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@9e8d6351: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@9e8d6351: Principal: org.springframework.security.core.userdetails.User@17d5e403: Username: test@gmail.com; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = engine.controller.TaskController
           Method = engine.controller.TaskController#solveQuiz(Integer, Hashtable)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"success":true,"feedback":"Congratulations, you're right!"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select user0_.id as id1_4_, user0_.active as active2_4_, user0_.email as email3_4_, user0_.password as password4_4_, user0_.roles as roles5_4_ from user user0_
Hibernate: select completed1_.id as id1_1_, completed1_.completed_at as complete2_1_, completed1_.quiz_id as quiz_id3_1_ from user user0_ inner join completed_quiz completed1_ on user0_.id=completed1_.completed_id where user0_.id=? order by completed1_.completed_at desc limit ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/quizzes/completed
       Parameters = {page=[0]}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@9e8d6351: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@9e8d6351: Principal: org.springframework.security.core.userdetails.User@17d5e403: Username: test@gmail.com; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = engine.controller.TaskController
           Method = engine.controller.TaskController#getAllCompletedQuiz(int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"totalPages":1,"totalElements":1,"last":true,"first":true,"sort":{"sorted":true,"unsorted":false,"empty":false},"number":0,"numberOfElements":1,"size":10,"empty":false,"pageable":{"sort":{"sorted":true,"unsorted":false,"empty":false},"offset":0,"pageNumber":0,"pageSize":10,"unpaged":false,"paged":true},"content":[{"id":1,"quizId":1,"completedAt":"2020-8-21T13:3:57.46320200"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select quiz0_.id as id1_3_0_, quiz0_.creator as creator2_3_0_, quiz0_.text as text3_3_0_, quiz0_.title as title4_3_0_ from quiz quiz0_ where quiz0_.id=?
Hibernate: select options0_.options_id as options_3_2_0_, options0_.option_id as option_i1_2_0_, options0_.option_id as option_i1_2_1_, options0_.option as option2_2_1_ from option options0_ where options0_.options_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /api/quizzes/1
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@9e8d6351: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@9e8d6351: Principal: org.springframework.security.core.userdetails.User@17d5e403: Username: test@gmail.com; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = engine.controller.TaskController
           Method = engine.controller.TaskController#getQuiz(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json", X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = application/json
             Body = {"id":1,"title":"Tea drinks","text":"Select only tea drinks.","creator":"test@gmail.com","options":[{"optionId":1,"option":"black tea"},{"optionId":2,"option":"green tea"},{"optionId":3,"option":"Cappuccino"},{"optionId":4,"option":"Sprite"}],"answers":null,"correct":true}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: call next value for hibernate_sequence
Hibernate: insert into quiz (creator, text, title, id) values (?, ?, ?, ?)
Hibernate: insert into answer (answer, answer_id) values (?, ?)
Hibernate: insert into answer (answer, answer_id) values (?, ?)
Hibernate: insert into option (option, option_id) values (?, ?)
Hibernate: insert into option (option, option_id) values (?, ?)
Hibernate: insert into option (option, option_id) values (?, ?)
Hibernate: insert into option (option, option_id) values (?, ?)
Hibernate: update answer set answers_id=? where answer_id=?
Hibernate: update answer set answers_id=? where answer_id=?
Hibernate: update option set options_id=? where option_id=?
Hibernate: update option set options_id=? where option_id=?
Hibernate: update option set options_id=? where option_id=?
Hibernate: update option set options_id=? where option_id=?
Hibernate: select quiz0_.id as id1_3_0_, quiz0_.creator as creator2_3_0_, quiz0_.text as text3_3_0_, quiz0_.title as title4_3_0_ from quiz quiz0_ where quiz0_.id=?
Hibernate: select answers0_.answers_id as answers_3_0_0_, answers0_.answer_id as answer_i1_0_0_, answers0_.answer_id as answer_i1_0_1_, answers0_.answer as answer2_0_1_ from answer answers0_ where answers0_.answers_id=?
Hibernate: select options0_.options_id as options_3_2_0_, options0_.option_id as option_i1_2_0_, options0_.option_id as option_i1_2_1_, options0_.option as option2_2_1_ from option options0_ where options0_.options_id=?
Hibernate: update answer set answers_id=null where answers_id=?
Hibernate: update option set options_id=null where options_id=?
Hibernate: delete from answer where answer_id=?
Hibernate: delete from answer where answer_id=?
Hibernate: delete from option where option_id=?
Hibernate: delete from option where option_id=?
Hibernate: delete from option where option_id=?
Hibernate: delete from option where option_id=?
Hibernate: delete from quiz where id=?

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /api/quizzes/1
       Parameters = {}
          Headers = []
             Body = null
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@9e8d6351: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@9e8d6351: Principal: org.springframework.security.core.userdetails.User@17d5e403: Username: test@gmail.com; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = engine.controller.TaskController
           Method = engine.controller.TaskController#deleteQuiz(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.server.ResponseStatusException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = [X-Content-Type-Options:"nosniff", X-XSS-Protection:"1; mode=block", Cache-Control:"no-cache, no-store, max-age=0, must-revalidate", Pragma:"no-cache", Expires:"0", X-Frame-Options:"DENY"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
